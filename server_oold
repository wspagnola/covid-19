library(shiny)
library(shinycustomloader)


source("data_processing.R")

server <- function(input, output, session){
  
  

  
  #### Notes ####
  
  # 1) need to adjust geom_() depending on selected indicator
  # 2) need to adjust y argument for geom_() call depending on selected indicator
  # 3) need to add argument to scale_y_continous for logistic scale 
  
  
  #### Country by Continent Input ####
  
  #Code for Interdependent Selection borrowed from Charles Hadley LinkedIn Learning Chpt. 06 Ex. 03
  
  updateSelectInput(session,
                    'continent',
                    choices = unique(countries$continent))

  observeEvent(c(input$continent),
               {
                  countries_in_continent <- countries %>%
                                              filter(continent == input$continent) %>%
                                              pull(country)
                  updateSelectInput(session,
                                    'country',
                                    choices = unique(countries_in_continent)
                  )
               }
   )
  

    #### Country Plots ####
  
    output$linear_cases_country <- renderPlot({
        
              countries %>%  
              filter(country == input$country,) %>% 
              ggplot(aes(x=date, y=cases)) +
              geom_line() +
              geom_point() +
              scale_y_continuous(labels = scales::comma) +
              theme_bw() +
              main_theme + 
              labs(title = paste0(input$country, ": Cumulative Cases (Linear)"),
                   caption = "Source: Johns Hopkins") 
    }) 
  
    output$linear_deaths_country <- renderPlot({
    
            countries %>%  
              filter(country == input$country,) %>% 
              ggplot(aes(x=date, y=deaths)) +
              geom_line() +
              geom_point() +
              scale_y_continuous(labels = scales::comma) + 
              theme_bw() +
              main_theme + 
              labs(title = paste0(input$country, ": Cumulative Deaths (Linear)"),
                   caption = "Source: Johns Hopkins") 
  }) 
  
  
    #### State Plots ####
    
        x <-reactive({input$indicator})
  
        output$state_cases <- renderPlot({
          
                     
                          if(x() == "New Cases/Deaths"){
                            
                            states %>% 
                              filter(state == input$state)  %>% 
                              filter(!is.na(new_cases)) %>%
                              ggplot(aes(x=date, y=new_cases, fill = weekend)) +
                              geom_col() +
                              theme_bw() +
                              main_theme +
                              xlab('') +
                              ylab('') + 
                              labs(title = paste0(input$state, ": New Cases"),
                                   caption = "Source: New York Times")
                            
                            
                          } else if(x() == "Cumulative Cases/Deaths (Linear)"){
                            
                            states %>% 
                              filter(state == input$state)  %>% 
                              ggplot(aes(x=date, y=cases)) +
                              geom_line() +
                              geom_point() +
                              scale_y_continuous(labels = scales::comma) +
                              theme_bw() +
                              main_theme +
                              xlab('') +
                              ylab('') +
                              labs(title = paste0(input$state, ": Cumulative Cases (Linear)"),
                                   caption = "Source: New York Times")
                            
                            
                          } else if(x()==  "Cumulative Cases/Deaths (Logistic)") {
                            
                            states %>% 
                              filter(state == input$state)  %>% 
                              filter(cases > 0) %>% 
                              ggplot(aes(x=date, y=cases)) +
                              geom_line() +
                              geom_point() +
                              scale_y_log10(labels = scales::comma) + 
                              theme_bw() +
                              main_theme +
                              xlab('') +
                              ylab('') 
                            
                          }
                        
        })
        
        output$state_deaths <- renderPlot({
          
                  if (x() ==  "New Cases/Deaths") {
                    
                      states %>% 
                        filter(state == input$state)  %>% 
                        filter(!is.na(new_cases)) %>%
                        ggplot(aes(x=date, y=new_cases, fill = weekend)) +
                        geom_col() +
                        theme_bw() +
                        main_theme +
                        xlab('') +
                        ylab('') + 
                        labs(title = paste0(input$state, ": New Cases"),
                             caption = "Source: New York Times")
                    
                    
                  } else if(x()==  "Cumulative Cases/Deaths (Linear)") {

                        states %>% 
                          filter(state == input$state)  %>% 
                          ggplot(aes(x=date, y=deaths)) +
                          geom_line() +
                          geom_point() +
                          scale_y_continuous(labels = scales::comma) +
                          theme_bw() +
                          main_theme +
                          xlab('') + 
                          ylab('') + 
                          labs(title = paste0(input$state, ": Cumulative Cases/Deaths (Logistic)"),
                               caption = "Source: New York Times")
                      
                  } else if(x()==  "Cumulative Cases/Deaths (Logistic)") {
                    
                    states %>% 
                      filter(state == input$state)  %>% 
                      filter(deaths > 0) %>% 
                      ggplot(aes(x=date, y=deaths)) +
                      geom_line() +
                      geom_point() +
                      scale_y_log10(labels = scales::comma) + 
                      theme_bw() +
                      main_theme +                
                      xlab('') +
                      ylab('') + 
                      labs(title = paste0(input$state, ": Cumulative Cases/Deaths (Logistic)"),
                           caption = "Source: New York Times")
                    
                  }
                  
        })

}